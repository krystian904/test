{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comp/dbtest/dbtest.component.css","webpack:///./src/app/comp/dbtest/dbtest.component.html","webpack:///./src/app/comp/dbtest/dbtest.component.ts","webpack:///./src/app/comp/youtube/youtube.component.css","webpack:///./src/app/comp/youtube/youtube.component.html","webpack:///./src/app/comp/youtube/youtube.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>angielski test</h1>\\n<app-youtube></app-youtube>\\n<app-dbtest></app-dbtest>\\n\"","import { Component } from '@angular/core';\nimport { YoutubePlayerModule } from 'ngx-youtube-player';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { Component } from '@angular/core';\n\nimport { YoutubePlayerModule } from 'ngx-youtube-player';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// youtube\nimport { AppComponent } from './app.component';\nimport { YoutubeComponent } from './comp/youtube/youtube.component';\nimport { DbtestComponent } from './comp/dbtest/dbtest.component';\n\n//firebases\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    YoutubeComponent,\n    DbtestComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule ,\n    YoutubePlayerModule ,\n     AngularFireModule.initializeApp(environment.firebase),\n\n     AngularFireModule.initializeApp(environment.firebase, 'my-app-name'), // imports firebase/app needed for everything\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features\n    AngularFireDatabaseModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","module.exports = \"\"","module.exports = \"<ul>\\n    <li *ngFor=\\\"let item of items | async\\\">\\n      <input type=\\\"text\\\" #updatetext [value]=\\\"item.text\\\" />\\n      <button (click)=\\\"updateItem(item.key, updatetext.value)\\\">Update</button>\\n      <button (click)=\\\"deleteItem(item.key)\\\">Delete</button>\\n    </li>\\n  </ul>\\n  <input type=\\\"text\\\" #newitem />\\n  <button (click)=\\\"addItem(newitem.value)\\\">Add</button>\\n  <button (click)=\\\"deleteEverything()\\\">Delete All</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-dbtest',\n  templateUrl: './dbtest.component.html',\n  styleUrls: ['./dbtest.component.css']\n})\nexport class DbtestComponent {\n\n  itemsRef: AngularFireList<any>;\n  items: Observable<any[]>;\n  constructor(db: AngularFireDatabase) {\n    this.itemsRef = db.list('messages');\n    // Use snapshotChanges().map() to store the key\n    this.items = this.itemsRef.snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n      )\n    );\n  }\n  addItem(newName: string) {\n    this.itemsRef.push({ text: newName });\n  }\n  updateItem(key: string, newText: string) {\n    this.itemsRef.update(key, { text: newText });\n  }\n  deleteItem(key: string) {\n    this.itemsRef.remove(key);\n  }\n  deleteEverything() {\n    this.itemsRef.remove();\n  }\n\n  OnInit(){\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<youtube-player\\n     [videoId]=\\\"id\\\"\\n     (ready)=\\\"savePlayer($event)\\\"\\n     (change)=\\\"onStateChange($event)\\\"\\n   ></youtube-player>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-youtube',\n  templateUrl: './youtube.component.html',\n  styleUrls: ['./youtube.component.css']\n})\nexport class YoutubeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  player: YT.Player;\n  private id: string = 'qDuKsiwS5xw';\n\n savePlayer(player) {\n   this.player = player;\n   console.log('player instance', player);\n }\n onStateChange(event) {\n   console.log('player state', event.data);\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false ,\n  firebase: {\n    apiKey: \"AIzaSyB2XmlljqSkXt98SUgTqFtjrAvYyC6Eqwg\",\n    authDomain: \"angielski-32159.firebaseapp.com\",\n    databaseURL: \"https://angielski-32159.firebaseio.com\",\n    projectId: \"angielski-32159\",\n    storageBucket: \"angielski-32159.appspot.com\",\n    messagingSenderId: \"1047939767386\"\n\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}