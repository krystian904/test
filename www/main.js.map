{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,gFAAgF,eAAe,4BAA4B,uBAAuB,4I;;;;;;;;;;;;;;;;;;;;;;;;;ACAxG;AACqD;AAU/F;IAKG,sBAAmB,IAAyB;QAAzB,SAAI,GAAJ,IAAI,CAAqB;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC;IACvD,CAAC;IAED,2BAAI,GAAJ,UAAK,CAAS;QAEZ,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,IAAM,cAAc,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;QAChD,cAAc,CAAC,SAAS,EAAE,CAAC;QAE3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAjBY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAM0B,yEAAmB;OALlC,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACQ;AACe;AACA;AACN;AACA;AACQ;AAEnB;AAiB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;gBACrD,6EAAsB;gBACtB,uEAAqB;gBACrB,6EAAwB;gBACxB,+EAAyB;aAC1B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;AC1BtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,iCAAiC;QAC7C,WAAW,EAAE,wCAAwC;QACrD,SAAS,EAAE,iBAAiB;QAC5B,aAAa,EAAE,6BAA6B;QAC5C,iBAAiB,EAAE,eAAe;KACnC;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACtBpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ul>\\n    <li *ngFor=\\\"let item of items | async\\\">\\n       {{ item | json }}\\n    </li>\\n  </ul>\\n<h1>{{ item | async | json }}</h1>\\n\\n  <input type=\\\"text\\\" #newname placeholder=\\\"Name\\\" />\\n\\n  <br />\\n  <button (click)=\\\"save(newname.value)\\\">Set Name</button>\\n\"","import { Component } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList,AngularFireObject } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n   itemRef: AngularFireObject<any>;\n   items: Observable<any>;\n\n\n   constructor(public afDb: AngularFireDatabase) {\n     this.items = afDb.list('krystian').valueChanges();\n}\n\nsave(s: string){\n\n  const afList = this.afDb.list('krystian');\n  afList.push({ name: s });\n  const listObservable = afList.snapshotChanges();\n  listObservable.subscribe();\n\n  console.log(s);\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from '../environments/environment';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase), // imports firebase/app needed for everything\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyB2XmlljqSkXt98SUgTqFtjrAvYyC6Eqwg',\n    authDomain: 'angielski-32159.firebaseapp.com',\n    databaseURL: 'https://angielski-32159.firebaseio.com',\n    projectId: 'angielski-32159',\n    storageBucket: 'angielski-32159.appspot.com',\n    messagingSenderId: '1047939767386'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}