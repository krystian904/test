{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,sd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEmC;AAIxC;AAMrC;IAIG,sBAAY,EAAuB;QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,+CAA+C;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAC/C,0DAAG,CAAC,iBAAO;YACT,cAAO,CAAC,GAAG,CAAC,WAAC,IAAI,mBAAG,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,IAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAG,EAA5C,CAA4C,CAAC;QAA9D,CAA8D,CAC/D,CACF,CAAC;IACJ,CAAC;IACD,8BAAO,GAAP,UAAQ,OAAe;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IACxC,CAAC;IACD,iCAAU,GAAV,UAAW,GAAW,EAAE,OAAe;QACrC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/C,CAAC;IACD,iCAAU,GAAV,UAAW,GAAW;QACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IACD,uCAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAxBS,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKiB,yEAAmB;OAJzB,YAAY,CAyBxB;IAAD,mBAAC;CAAA;AAzBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACyB;AACjB;AACe;AACA;AACN;AACA;AAEX;AAiB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,+EAAyB;gBACzB,uEAAa;gBACZ,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;gBACrD,6EAAsB;gBACtB,uEAAqB;gBACrB,6EAAwB,CAAC,4DAA4D;aACvF;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;AC1BtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,iCAAiC;QAC7C,WAAW,EAAE,wCAAwC;QACrD,SAAS,EAAE,iBAAiB;QAC5B,aAAa,EAAE,6BAA6B;QAC5C,iBAAiB,EAAE,eAAe;KAEnC;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACvBpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1> dziala </h1>\\n<ul>\\n   <li *ngFor=\\\"let item of items | async\\\">\\n     <input type=\\\"text\\\" #updatetext [value]=\\\"item.text\\\" />\\n     <button (click)=\\\"updateItem(item.key, updatetext.value)\\\">Update</button>\\n     <button (click)=\\\"deleteItem(item.key)\\\">Delete</button>\\n   </li>\\n </ul>\\n <input type=\\\"text\\\" #newitem />\\n <button (click)=\\\"addItem(newitem.value)\\\">Add</button>\\n <button (click)=\\\"deleteEverything()\\\">Delete All</button>\\n\"","import { Component } from '@angular/core';\nimport { FirebaseApp } from 'angularfire2';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  itemsRef: AngularFireList<any>;\n   items: Observable<any[]>;\n   constructor(db: AngularFireDatabase) {\n     this.itemsRef = db.list('messages');\n     // Use snapshotChanges().map() to store the key\n     this.items = this.itemsRef.snapshotChanges().pipe(\n       map(changes =>\n         changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n       )\n     );\n   }\n   addItem(newName: string) {\n     this.itemsRef.push({ text: newName });\n   }\n   updateItem(key: string, newText: string) {\n     this.itemsRef.update(key, { text: newText });\n   }\n   deleteItem(key: string) {\n     this.itemsRef.remove(key);\n   }\n   deleteEverything() {\n     this.itemsRef.remove();\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireDatabaseModule,\n    BrowserModule,\n     AngularFireModule.initializeApp(environment.firebase), // imports firebase/app needed for everything\n     AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n     AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n     AngularFireStorageModule // imports firebase/storage only needed for storage features\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB2XmlljqSkXt98SUgTqFtjrAvYyC6Eqwg\",\n    authDomain: \"angielski-32159.firebaseapp.com\",\n    databaseURL: \"https://angielski-32159.firebaseio.com\",\n    projectId: \"angielski-32159\",\n    storageBucket: \"angielski-32159.appspot.com\",\n    messagingSenderId: \"1047939767386\"\n\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}